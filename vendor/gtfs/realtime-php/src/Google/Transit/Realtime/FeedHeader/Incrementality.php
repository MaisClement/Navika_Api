<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: gtfs-realtime.proto

namespace Google\Transit\Realtime\FeedHeader;

use UnexpectedValueException;

/**
 * Determines whether the current fetch is incremental.  Currently,
 * DIFFERENTIAL mode is unsupported and behavior is unspecified for feeds
 * that use this mode.  There are discussions on the GTFS Realtime mailing
 * list around fully specifying the behavior of DIFFERENTIAL mode and the
 * documentation will be updated when those discussions are finalized.
 *
 * Protobuf type <code>Google.Transit.Realtime.FeedHeader.Incrementality</code>
 */
class Incrementality
{
    /**
     * Generated from protobuf enum <code>FULL_DATASET = 0;</code>
     */
    const FULL_DATASET = 0;
    /**
     * Generated from protobuf enum <code>DIFFERENTIAL = 1;</code>
     */
    const DIFFERENTIAL = 1;

    private static $valueToName = [
        self::FULL_DATASET => 'FULL_DATASET',
        self::DIFFERENTIAL => 'DIFFERENTIAL',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Incrementality::class, \Google\Transit\Realtime\FeedHeader_Incrementality::class);

